



Internet                                                 L.R. van Kammen
Internet-Draft                                          8 September 2023
Intended status: Informational                                          
Expires: 11 March 2024


                              hashtagbibs
                   draft-hashtagbibs-leonvankammen-00

Abstract

   *hashtagbibs* (or simply: *'bibs'*) are tiny tags, allowing mere
   mortals to connect words to other words using pencil, voice or
   keyboard.
   They expand into multiple (reversed) BibTags
   (https://en.wikipedia.org/wiki/BibTeX), JSON or XML snippets.
   For example, using OCR, scanned paper can now easily 'connect' with
   online graphs.
   Think of it as the brother of hashtags: a command for tagging-this-
   with-that.
   The goal of this spec is three-fold:

   *  specify bibs: a terse tagdescription which expands into a reversed
      BibTag
   *  specify bibs as URI fragment: a way to hint browsers to jump to
      (bib)tagged content
   *  specify bibrulers: dumb line-based separators for bibtags

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 11 March 2024.







van Kammen                Expires 11 March 2024                 [Page 1]

Internet-Draft                 hashtagbibs                September 2023


Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  What are bibs . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  format  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.2.  Example: an textual kanban using tags . . . . . . . . . .   4
     1.3.  Example javascript bibs expander  . . . . . . . . . . . .   5
     1.4.  Merging (BibTagged) overlaps  . . . . . . . . . . . . . .   5
   2.  What are bibs in a URI fragment . . . . . . . . . . . . . . .   6
   3.  BibRulers (BibTex microformats) . . . . . . . . . . . . . . .   6
   4.  Contact . . . . . . . . . . . . . . . . . . . . . . . . . . .   7
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   6.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   7

1.  What are bibs

   <img src="postit.jpg" style="max-width:400px"/>

   bibs allow non-technical humans to write (reversed) BibTags, JSON or
   XML, in a short-form (on paper):

   John please get out the laundry

   #john
   #laundry@chores@todo

   |  This basically means:

   *  *tag* john with tagname john
   *  *tag* laundry with tagname chores and todo

   and expanding into the following formats:






van Kammen                Expires 11 March 2024                 [Page 2]

Internet-Draft                 hashtagbibs                September 2023


BibTeX             JSON                                   XML
======             ====                                   ===

@john{john,        { "tag":"john", "match":"john"}        <tag name="john">john</tag>

}

@chores{laundry,   { "tag":"chores", "match":"laundry"}   <tag name="chores">laundry</tag>

}
@todo{laundry,     { "tag":"todo", "match": "laundry"}    <tag name="todo">laundry</tag>

}

   |  the word and john laundry can now be highlighted in the human text
   |  (or 3D object can be shown when their objectname matches). bibs
   |  are basically one step up from socialmedia hashtags, allowing mere
   |  mortals to connect words to other things using pencil, voice or
   |  keyboard.

   There's no precise predicates or properties, just simply 'this points
   to that', which empowers citizen annotation (an essential precursor
   of RDF).

   |  NOTE: in the rest of this article, we use focus on BibTex for
   |  convenience (as it is the most terse outputformat of hashtagbibs).

1.1.  format

   *  #<textpattern>[@tag[@anothertag[...]]]

   |  syntactically, bibs are hashtags with (concatenated) emaildomains
   |  without an extension

     +==================+===========================================+
     | language         | example                                   |
     +==================+===========================================+
     | javascript regex | /(#[a-zA-Z0-9_+@\-]+(#)?)/g               |
     +------------------+-------------------------------------------+
     | shell grep       | cat textwithbibs.txt | grep -oE '/(#[a-   |
     |                  | zA-Z0-9_+@\-]+(#)?)/'                     |
     +------------------+-------------------------------------------+
     | shell awk        | cat textwithbibs.txt | xargs -n1 | awk    |
     |                  | '/(#[a-zA-Z0-9_+@\-]+(#)?)/ { print $0 }' |
     +------------------+-------------------------------------------+

                                 Table 1




van Kammen                Expires 11 March 2024                 [Page 3]

Internet-Draft                 hashtagbibs                September 2023


   1.  to qualify as a bib, a word should start with a hashtag, and
       (optionally) contain on or more @ characters
   2.  last bib wins: overlapping bibs overwrite eachother (last tag(s)
       win)
   3.  spaces are not allowed, maximum by using + to represents spaces
       (the+bill@todo e.g.)

   #great+gatsby@book@readinglist
   #great+gatsby@book

   would only expand to:

   @book{great+gatsby

   }

1.2.  Example: an textual kanban using tags

   buy milk
   finish paper
   contact John
   buy the great gatsby

   #milk@todo
   #contact@doing
   #contact@done
   #gatsby@done
   #finish+paper@doing

   If this text would be written on a paper, it could be scanned by a
   computer and represented spatially like so:

              +==========+==================+==============+
              | todo     | doing            | done         |
              +==========+==================+==============+
              | buy milk | finish paper     | contact John |
              +----------+------------------+--------------+
              |          | buy great gatsby |              |
              +----------+------------------+--------------+

                                 Table 2

   |  One could argue that tagging a word like buy would create
   |  conflicts, but for most purposes this is really easy to spot /
   |  workaround.  For serious, large bodies of text use (unique)
   |  expanded BibTags instead.





van Kammen                Expires 11 March 2024                 [Page 4]

Internet-Draft                 hashtagbibs                September 2023


1.3.  Example javascript bibs expander

   Tiny but powerful implications:

expandBibs = (text) => {
    let bibs   = { regex: /(#[a-zA-Z0-9_+@\-]+(#)?)/g, tags: {}}
    text.replace( bibs.regex , (m,k,v) => {
       tok   = m.substr(1).split("@")
       match = tok.shift()
       console.log(match)
       if( tok.length ) tok.map( (t) => bibs.tags[t] = `@${t}{${match},\n}` )
       else if( match.substr(-1) == '#' )
          bibs.tags[match] = `@{${match.replace(/#/,'')}}`
       else bibs.tags[match] = `@${match}{${match},\n}`
    })
    return text.replace( bibs.regex, '') + Object.values(bibs.tags).join('\n')
}

t = expandBibs(`john, could you feed the cat?

  #john
  #laundry@chores@todo
  #some-scope#
`)

   BibTeX OUTPUT:

    john, could you feed the cat?


    @john{john,
    }
    @chores{laundry,
    }
    @todo{laundry,
    }
    @{some-scope}

1.4.  Merging (BibTagged) overlaps

   When a bib (#great+gatsby@book is copy-pasted into another document
   (a PDF or Textfile with a visual-meta (https://visual-meta.info)
   appendix e.g.):

   1.  the editor should check for the existence of @book{great+gatsby
   2.  if exist: do nothing, leave target document as is
   3.  if not: create the expanded BibTag




van Kammen                Expires 11 March 2024                 [Page 5]

Internet-Draft                 hashtagbibs                September 2023


   4.  optionally, the editor can offer to add properties (as bibs are
       propertyless)

   |  propertyless bibs, are a great way as a 'process later'-medium ("I
   |  wrote down great+gatsby@readinglist on a papertowel/email, to
   |  scan/copy-paste it later)

2.  What are bibs in a URI fragment

   Just like regular URI Fragments (https://en.wikipedia.org/wiki/
   URI_fragment) they hint the browser to focus anything (Bib)Tagged:

   *  https://website.com#@chores@todo
   *  https://mastodon.io/myprofile/#@chores@todo
   *  ://xrworld.org/3dscene.gltf#@chores@todo

   |  Format: #@<bibtag>[ + @<bibtag> + [ ... ] ]

3.  BibRulers (BibTex microformats)

   The following allows for microformats:

   Apples, cinnamon, sugar and dough make a great applepie.

   #recipe-start#
   #applepie@todo
   #recipe-stop#

   expands into the following BibTex

   ${recipe-start}
   @todo{applepie,

   }
   ${recipe-stop}

   BibTex microformats have been pioneered by the visual-meta
   (https://visual-meta.info) microformat as a means of organizing
   BibTags:












van Kammen                Expires 11 March 2024                 [Page 6]

Internet-Draft                 hashtagbibs                September 2023


   @{visual-meta-start}
   @{visual-meta-header-start}
   @visual-meta{
    version = {1.1},
    generator = {Author 7.6.2 (1064)},
   }
   @{visual-meta-header-end}
   @{visual-meta-bibtex-self-citation-start}
   @book{2021-12-08T10:57:03Z/TheFutureo,
   author = {Frode Alexander Hegland},
   editor = {Frode Alexander Hegland},
   title = {The Future of Text ||},
   ...

   This snippet would get decoded to this unnested array:

[
  { ruler: `{visual-meta-start}` },
  { ruler: `{visual-meta-header-start}` },
  { k: "visual-meta", v: { version: "1.1", generator: "Author 7.6.2 1064)" } }
  { ruler: `{visual-meta-header-end}` },
  { ruler: `{visual-meta-bibgtex-self-citation-start}` },
  { k: "book{2021-12-08T10:56:03Z/TheFutureo", v: { author: "Frode ...", ... } }
  ...
]

   Why not a nested tree-structure?  This kneejerk reaction should
   always be considered 'a temporary option'.
   Don't forget that Bibrulers are simply rulers (not blocks):

   1.  don't try to re-invent XML or JSON
   2.  don't promote traversing graphs (instead: just a list with tags)
   3.  they promote rather dumb, unnested lists
   4.  they are much faster/simpler to lookup, implement, (de)serialize
       in low- and hihglevel languages.

4.  Contact

   *  leonvankammen|gmail.com

5.  IANA Considerations

   This document has no IANA actions.

6.  Acknowledgments

   TODO acknowledge.




van Kammen                Expires 11 March 2024                 [Page 7]
